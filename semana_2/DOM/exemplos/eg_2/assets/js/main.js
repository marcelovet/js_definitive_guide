// 1. CAPTURAR REFER√äNCIAS DOS ELEMENTOS
const tituloprincipal = document.getElementById('titulo-principal');
const subtitulo = document.getElementById('subtitulo');
const paragrafoPrincipal = document.getElementById('paragrafo-principal');
const areaDinamica = document.getElementById('area-dinamica');
const debugInfo = document.getElementById('debug-info');

// Bot√µes de controle
const btnMudarTitulo = document.getElementById('mudar-titulo');
const btnMudarParagrafo = document.getElementById('mudar-paragrafo');
const btnDestacar = document.getElementById('destacar-texto');
const btnAdicionar = document.getElementById('adicionar-paragrafo');
const btnResetar = document.getElementById('resetar');

// Fun√ß√£o para atualizar informa√ß√µes de debug
function atualizarDebug() {
  const info = `
T√≠tulo: "${tituloprincipal.textContent}"
Subt√≠tulo: "${subtitulo.textContent}"
Par√°grafo: "${paragrafoPrincipal.textContent.substring(0, 50)}..."
Elementos na √°rea din√¢mica: ${areaDinamica.children.length}
√öltima modifica√ß√£o: ${new Date().toLocaleTimeString()}
      `;
  debugInfo.textContent = info.trim();
}

// 2. MODIFICANDO CONTE√öDO DE TEXTO
btnMudarTitulo.addEventListener('click', function () {
  // M√©todo 1: Usando textContent (mais seguro)
  const novoTitulo = prompt('Digite o novo t√≠tulo:');
  if (novoTitulo) {
    tituloprincipal.textContent = `üéØ ${novoTitulo}`;

    // Adicionar classe para indicar modifica√ß√£o
    tituloprincipal.classList.add('modified');

    atualizarDebug();
  }
});

// 3. MODIFICANDO USANDO FIRSTCHILD.DATA (t√©cnica da MDN)
btnMudarParagrafo.addEventListener('click', function () {
  // Esta √© a t√©cnica mostrada na documenta√ß√£o MDN
  const novoParagrafo = prompt('Digite o novo par√°grafo:');
  if (novoParagrafo) {
    // Acessar o primeiro n√≥ filho (que √© o texto)
    paragrafoPrincipal.firstChild.data = novoParagrafo;

    paragrafoPrincipal.classList.add('modified');
    atualizarDebug();
  }
});

// 4. MODIFICANDO ESTILOS E CLASSES
btnDestacar.addEventListener('click', function () {
  // Alternar destaque no subt√≠tulo
  subtitulo.classList.toggle('highlight');

  // Exemplo de modifica√ß√£o direta de estilo
  if (subtitulo.classList.contains('highlight')) {
    subtitulo.style.transform = 'scale(1.1)';
    subtitulo.style.transition = 'all 0.3s ease';
  } else {
    subtitulo.style.transform = 'scale(1)';
  }

  atualizarDebug();
});

// 5. CRIANDO NOVOS ELEMENTOS (t√©cnica da MDN)
btnAdicionar.addEventListener('click', function () {
  // Criar novo texto
  const novoTexto = document.createTextNode(
    'Este √© um novo par√°grafo criado dinamicamente!'
  );

  // Criar novo elemento
  const novoElemento = document.createElement('p');

  // Adicionar algumas propriedades
  novoElemento.style.background = '#e8f5e8';
  novoElemento.style.padding = '10px';
  novoElemento.style.margin = '10px 0';
  novoElemento.style.borderRadius = '5px';
  novoElemento.style.border = '1px solid #28a745';

  // Colocar o texto no par√°grafo
  novoElemento.appendChild(novoTexto);

  // Adicionar um bot√£o de remo√ß√£o
  const btnRemover = document.createElement('button');
  btnRemover.textContent = '‚ùå Remover';
  btnRemover.style.marginLeft = '10px';
  btnRemover.style.background = '#dc3545';

  btnRemover.addEventListener('click', function () {
    // Remover o elemento pai (o par√°grafo)
    areaDinamica.removeChild(novoElemento);
    atualizarDebug();
  });

  novoElemento.appendChild(btnRemover);

  // Adicionar ao final da √°rea din√¢mica
  areaDinamica.appendChild(novoElemento);

  atualizarDebug();
});

// 6. RESETAR TUDO
btnResetar.addEventListener('click', function () {
  if (confirm('Tem certeza que deseja resetar todas as modifica√ß√µes?')) {
    // Voltar textos originais
    tituloprincipal.textContent = 'üé® Editor Din√¢mico de P√°gina';
    subtitulo.textContent = 'Subt√≠tulo Original';
    paragrafoPrincipal.firstChild.data =
      'Este √© o par√°grafo original. Clique nos bot√µes acima para ver as modifica√ß√µes!';

    // Remover todas as classes
    tituloprincipal.className = '';
    subtitulo.className = '';
    paragrafoPrincipal.className = '';

    // Resetar estilos
    subtitulo.style.cssText = '';

    // Limpar √°rea din√¢mica
    areaDinamica.innerHTML = '';

    atualizarDebug();
  }
});

// 7. EXEMPLO DE NAVEGA√á√ÉO NA √ÅRVORE DOM
function demonstrarNavegacao() {
  console.log('=== NAVEGA√á√ÉO NA √ÅRVORE DOM ===');

  // Partir do par√°grafo principal
  const para = paragrafoPrincipal;

  console.log('Elemento atual:', para.tagName);
  console.log('Texto do elemento:', para.textContent);
  console.log('Class do Elemento pai:', para.parentNode.className);
  console.log('Pr√≥ximo irm√£o:', para.nextElementSibling?.id || 'Nenhum');
  console.log(
    'Irm√£o anterior:',
    para.previousElementSibling?.tagName || 'Nenhum'
  );
  console.log(
    'Primeiro filho (texto):',
    para.firstChild.nodeType === 3 ? '√â um n√≥ de texto' : 'N√£o √© texto'
  );
}

// Executar demonstra√ß√£o quando a p√°gina carregar
window.addEventListener('load', function () {
  atualizarDebug();
  demonstrarNavegacao();

  // Adicionar informa√ß√£o sobre a estrutura da p√°gina
  console.log('=== ESTRUTURA DA P√ÅGINA ===');
  console.log(
    'Total de elementos H1:',
    document.getElementsByTagName('h1').length
  );
  console.log(
    'Total de par√°grafos:',
    document.getElementsByTagName('p').length
  );
  console.log(
    'Total de bot√µes:',
    document.getElementsByTagName('button').length
  );
});
